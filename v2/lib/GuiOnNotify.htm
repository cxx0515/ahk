<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>OnNotify (GUI) - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The OnNotify method of a GuiControl object registers a function or method to be called when a control notification is received via the WM_NOTIFY message." />
<meta name="ahk:equiv-v1" content="lib/GuiControl.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css">
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnNotify</h1>
<p>注册一个函数或方法, 当通过 <a href="#WM_NOTIFY">WM_NOTIFY</a> 消息接收到控制通知时调用.</p>
<pre class="Syntax"><a href="GuiControl.htm">GuiCtrl</a>.<span class="func">OnNotify</span>(NotifyCode, Callback <span class="optional">, AddRemove</span>)</pre>

<h2 id="Parameters">参数</h2>
<dl>
  <dt>NotifyCode</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>要监控的控件定义的通知代码.</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>或<a href="../misc/Functor.htm">函数对象</a></p>
    <p>事件发生时要调用的函数, 方法或对象.</p>
    <p>如果 GUI 有事件接收器(即, 如果指定了 <a href="Gui.htm#Call">Gui()</a> 的 <em>EventObj</em> 参数), 那么这个参数可能是属于事件接收器的方法的名称. 否则, 这个参数必须是一个<a href="../misc/Functor.htm">函数对象</a>.</p>
        <p id="Callback_Parameters">回调函数接受两个参数, <a href="../Functions.htm#intro">定义</a>如下:</p>
    <pre class="NoIndent">MyCallback(GuiCtrl, lParam) { ...</pre>
    <p>虽然你给参数的名字并不重要, 但是下面的值会依次赋给它们:</p>
    <ol>
      <li>当前 GUI 控件的 <a href="GuiControl.htm">GuiControl 对象</a>.</li>
      <li>从 <a href="https://learn.microsoft.com/windows/win32/api/richedit/ns-richedit-nmhdr">NMHDR</a> 派生的通知结构的地址. 其确切类型取决于控件和通知代码的类型. 如果结构包含关于通知的附加信息, 回调函数可以使用 <a href="NumGet.htm">NumGet</a> 和/或 <a href="StrGet.htm">StrGet</a> 检索它.</li>
    </ol>
    <p>如果不需要相应的信息, 你可以从回调参数列表的末尾省略一个或多个参数, 但在这种情况下, 必须指定星号作为最后一个参数, 例如 <code>MyCallback(Param1, *)</code>.</p>
    <p><a href="GuiOnEvent.htm#Callback_Parameters">OnEvent 注释中</a>关于 <code>this</code> 和绑定函数的内容也适用于 OnNotify.</p>
    <p id="Callback_Return_Value">如果一个事件注册了多个回调函数, 则回调函数可能返回一个非空值, 以防止调用任何剩余的回调函数.</p>
    <p>根据通知的不同, 回调函数的返回值可能有其他含义. 例如, 如果回调返回 TRUE(1), ListView 通知 <a href="https://learn.microsoft.com/windows/win32/controls/lvn-beginlabeledit">LVN_BEGINLABELEDIT</a>(-175 或 -105) 会阻止用户编辑标签.</p>
  </dd>
  
  <dt>AddRemove</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>如果省略, 则默认为 1. 否则, 指定下列数字之一:</p>
    <ul>
      <li>1 = 在任何先前注册的回调之后调用回调.</li>
      <li>-1 = 在任何先前注册的回调之前调用回调.</li>
      <li>0 = 不调用该回调.</li>
    </ul>
  </dd>
</dl>

<h2 id="WM_NOTIFY">WM_NOTIFY</h2>
<p>每当发生要监控事件或控件需要从程序中获取信息时, 某些类型的控件就会发送一条 <a href="https://learn.microsoft.com/windows/win32/controls/wm-notify">WM_NOTIFY</a> 消息. 该消息的 <em>lParam</em> 参数包含一个指向包含通知信息的结构的指针. 结构的类型取决于通知代码和触发通知的控件类型, 但总是基于 <a href="https://learn.microsoft.com/windows/win32/api/richedit/ns-richedit-nmhdr">NMHDR</a>.</p>
<p>要确定哪些通知是可用的(如果有的话), 它们提供的结构类型以及它们如何解释返回值, 请参考控件的文档. <a href="https://learn.microsoft.com/windows/win32/controls/individual-control-info">Control Library (Microsoft Docs)</a> 包含了每个 Windows 常用控件的链接. 通知代码(编号) 可以在 Windows SDK 中找到, 或者在互联网上搜索.</p>
<p>AutoHotkey 使用 <em>idFrom</em> 和 <em>hwndFrom</em> 字段来识别是哪个控件发送的通知, 以便将其派遣到相应的对象. <em>code</em> 字段包含通知代码. 由于这些字段必须与用于注册回调的  <em>GuiCtrl</em> 和 <em>NotifyCode</em> 相匹配, 所以它们对脚本很少有用.</p>

<h2 id="Related">相关</h2>
<p><a href="GuiOnEvent.htm">OnEvent</a> 的说明也适用于 OnNotify: <a href="GuiOnEvent.htm#Threads">线程</a>, <a href="GuiOnEvent.htm#Destroying_the_GUI">销毁 GUI</a>.</p>
<p><a href="GuiOnCommand.htm">OnCommand</a> 可以用于作为 WM_COMMAND 消息发送的通知.</p>

</body>
</html>