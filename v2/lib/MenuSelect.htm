<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>MenuSelect - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The MenuSelect function invokes a menu item from the menu bar of the specified window." />
<meta name="ahk:equiv-v1" content="lib/WinMenuSelectItem.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>MenuSelect</h1>

<p>从指定窗口菜单栏中调用菜单项.</p>

<pre class="Syntax"><span class="func">MenuSelect</span> WinTitle, WinText, Menu <span class="optional">, SubMenu1, SubMenu2, SubMenu3, SubMenu4, SubMenu5, SubMenu6, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
    <p>如果这些都是空白或省略, 将使用<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>. 否则, 为 <em>WinTitle</em> 指定<a href="../misc/WinTitle.htm">窗口标题或其他条件</a>, 来标识目标窗口, 和/或为 <em>WinText</em> 指定目标窗口的单个文本元素的子字符串(由包含的 Window Spy 实用程序显示).</p>
    <p><em>ExcludeTitle</em> 和 <em>ExcludeText</em> 可用于根据标题或文本排除一个或多个窗口. 它们的规范类似于 <em>WinTitle</em> 和 <em>WinText</em>, 除了 <em>ExcludeTitle</em> 不识别除窗口标题之外的任何条件.</p>
    <p>窗口标题和文本是区分大小写的. 默认情况下, 不检测隐藏窗口, 而检测隐藏文本元素, 除非使用 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 和 <a href="DetectHiddenText.htm">DetectHiddenText</a> 进行更改. 默认情况下, 窗口标题必须以指定的 <em>WinTitle</em> 或 <em>ExcludeTitle</em> 开头才能匹配, 除非使用 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> 进行更改.</p>
  </dd>

  <dt>Menu</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>顶级菜单项的名称(或名称前缀), 例如<code>"File"</code>, <code>"Edit"</code>, <code>"View"</code>. 此参数也可以使用期望的菜单项的位置, 通过使用 <code>"1&amp;"</code> 表示首个菜单, <code>"2&amp;"</code> 表示第二个, 以此类推.</p>
    <p>根据当前用户区域设置的规则, 搜索是不区分大小写的, 并在第一个匹配项处停止. 使用和符号(&amp;) 来表示菜单项中带下划线的字母, <em>通常</em> 是不必要的(例如 <code>"&amp;File"</code> 等同于 <code>"File"</code>).</p>
    <p><strong>已知限制:</strong> 如果参数包含一个和符号(&), 那么它必须与项目名称完全匹配, 包括所有非原义的和符号(隐藏或显示为下划线). 如果参数不包含和符号, 则忽略所有和符号, 包括原义的. 例如, 显示为 "a &amp; b" 的项可能匹配的参数值为 <code>a &amp;&amp; b</code> 或 <code>a  b</code>.</p>
    <p>指定 <code>"0&amp;"</code> 使用窗口的<a href="#sys">系统菜单</a>.</p>
  </dd>

  <dt>SubMenu1</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>要选择的菜单项的名称或位置(请参阅上面). 如果顶级项目不包含菜单(罕见的), 则可以省略此项.</p>
  </dd>

  <dt>SubMenu2, SubMenu3, SubMenu4, SubMenu5, SubMenu6</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>如果前一个子菜单包含菜单, 那么这是里面的菜单项的名称或位置.</p>

  </dd>

</dl>

<h2 id="Error_Handling">错误处理</h2>
<p>如果找不到窗口或控件, 则抛出 <a href="Error.htm#TargetError">TargetError</a>.</p>
<p>如果找不到菜单, 子菜单或菜单项, 或最后的菜单参数对应于一个打开子菜单的菜单项, 则抛出 <a href="Error.htm#ValueError">ValueError</a>.</p>

<h2 id="Remarks">备注</h2>
<p>为了使该函数工作, 目标窗口可以处于不活动状态. 然而, 某些窗口可能需要处于<a href="WinRestore.htm">非最小化</a>状态.</p>
<p>函数对于使用非标准菜单栏的应用程序 <strong>无效</strong>. 例如 Microsoft Outlook 和 Outlook Express, 它们使用伪装的工具栏作为菜单栏. 在这种情况下, 考虑使用 <a href="ControlSend.htm">ControlSend</a> 或 <a href="PostMessage.htm">PostMessage</a>, 它们应该能和一些这样的非标准菜单栏交互.</p>
<p>参数中的菜单名称还可以使用位置代替. 提供这种方法是为了支持不包含文本的菜单(可能是由于它们包含文本的图片而不是真实的文本). 位置 1&amp; 表示首个菜单项(例如 File 菜单), 位置 2&amp; 表示第二个菜单项(例如 Edit 菜单), 以此类推. 为了确定菜单项的位置, 菜单分隔线也作为菜单项计算.</p>

<h2 id="sys">系统菜单</h2>
<p><em>Menu</em> 可以是 <code>"0&amp;"</code>, 以选择窗口系统菜单的项目, 该菜单通常在用户按下 <kbd>Alt</kbd>+<kbd>Space</kbd> 或点击窗口标题栏中的图标时出现. 例如:</p>
<pre><em>; 粘贴命令到 cmd.exe 而不用激活窗口.</em>
A_Clipboard := "echo Hello, world!`r"
MenuSelect "ahk_exe cmd.exe",, "0&amp;", "Edit", "Paste"</pre>
<p class="warning"><strong>警告:</strong> 仅在窗口的系统菜单中具有自定义项目时使用此项.</p>
<p>如果窗口还没有自定义系统菜单, 则将产生创建一个标准系统菜单的副本并关联到目标窗口的副作用. 该副本在脚本退出时被系统销毁, 导致其他脚本无法访问该副本. 因此, 避免在所有显示标准项目的窗口上使用 0&amp; 作为代替, 直接 post <a href="https://learn.microsoft.com/windows/win32/menurc/wm-syscommand">WM_SYSCOMMAND</a> 消息. 例如:</p>
<pre><em>; 类似 [<a href="WinMinimize.htm">WinMinimize</a> "A"], 但最小化时播放系统声音.</em>
WM_SYSCOMMAND := 0x112
SC_MINIMIZE := 0xF020
PostMessage WM_SYSCOMMAND, SC_MINIMIZE, 0,, "A"</pre>

<h2 id="Related">相关</h2>
<p><a href="ControlSend.htm">ControlSend</a>, <a href="PostMessage.htm">PostMessage</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 选择记事本的 <code class="no-highlight">File -&gt; Open</code> 菜单. 这个例子在 Windows 11 或更高版本系统可能会失败, 因为它需要经典版本的记事本.</p>
<pre>MenuSelect "Untitled - Notepad",, "File", "Open"</pre>
</div>

<div class="ex" id="ExPos">
<p><a class="ex_number" href="#ExPos"></a> 与上述相同, 只是按位置而不是按名称进行. 在 Windows 10 中, 2& 必须被替换为 3&, 因为新的 "New Window" 菜单项. 这个例子在 Windows 11 或更高版本系统可能会失败, 因为它需要经典版本的记事本.</p>
<pre>MenuSelect "Untitled - Notepad",, "1&amp;", "2&amp;"</pre>
</div>

<div class="ex" id="ExMainWin">
<p><a class="ex_number" href="#ExMainWin"></a> 选择<a href="../Program.htm#main-window">主窗口</a>中的 <code class="no-highlight">View -&gt; Lines most recently executed</code>.</p>
<pre>WinShow "ahk_class AutoHotkey"
MenuSelect "ahk_class AutoHotkey",, "View", "Lines most recently executed"</pre>
</div>

</body>
</html>