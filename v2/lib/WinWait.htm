<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>WinWait - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The WinWait function waits until the specified window exists." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinWait</h1>

<p>等待直到指定的窗口存在.</p>

<pre class="Syntax"><span class="func">WinWait</span> <span class="optional">WinTitle, WinText, Timeout, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
    <p>至少需要其中的一个. 否则, 为 <em>WinTitle</em> 指定<a href="../misc/WinTitle.htm">窗口标题或其他条件</a>, 来标识目标窗口, 和/或为 <em>WinText</em> 指定目标窗口的单个文本元素的子字符串(由包含的 Window Spy 实用程序显示).</p>
    <p><em>ExcludeTitle</em> 和 <em>ExcludeText</em> 可用于根据标题或文本排除一个或多个窗口. 它们的规范类似于 <em>WinTitle</em> 和 <em>WinText</em>, 除了 <em>ExcludeTitle</em> 不识别除窗口标题之外的任何条件.</p>
    <p>窗口标题和文本是区分大小写的. 默认情况下, 不检测隐藏窗口, 而检测隐藏文本元素, 除非使用 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 和 <a href="DetectHiddenText.htm">DetectHiddenText</a> 进行更改. 默认情况下, 窗口标题必须以指定的 <em>WinTitle</em> 或 <em>ExcludeTitle</em> 开头才能匹配, 除非使用 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> 进行更改.</p>
  </dd>

  <dt>Timeout</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#numbers">浮点数</a></p>
    <p>如果省略, 函数将会无限期等待. 否则, 指定在超时之前等待的秒数. 若要等待零点几秒, 请指定一个浮点数, 例如, 0.25 表示最多等待 250 毫秒.</p>
  </dd>

</dl>

<h2 id="Return_Value">返回值</h2>
<p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
<p>如果发现了匹配的窗口, 则该函数返回该窗口的 <a href="../misc/WinTitle.htm#ahk_id">HWND(唯一 ID)</a>, 否则函数超时, 返回 0.</p>

<h2 id="Remarks">备注</h2>
<p>如果匹配窗口存在, 函数不会等待到 <em>Timeout</em> 过期. 相反, 它会更新<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>和返回, 并让脚本继续执行.</p>
<p>如果 <em>WinTitle</em> 指定了一个无效的 HWND(作为一个整数或通过一个对象的 HWND 属性), 该函数立即返回, 而不等待 <em>Timeout</em> 超时. 等待另一个具有相同 HWND 值的窗口创建是没有意义的, 因为两个窗口之间可能没有关系.</p>
<p>当函数处于等待状态时, 可以通过<a href="../Hotkeys.htm">热键</a>, <a href="Menu.htm">自定义菜单项</a>或<a href="SetTimer.htm">计时器</a>启动新的<a href="../misc/Threads.htm">线程</a>.</p>
<p>如果另一个<a href="../misc/Threads.htm">线程</a>更改了用于该函数参数的任何变量的内容, 该函数将不会看到更改 -- 它将继续使用在函数首次开始等待时最初出现在变量中的标题和文本.</p>
<p>与 <a href="WinWaitActive.htm">WinWaitActive</a> 不同, 不能使用<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>. 所以, 至少有一个窗口参数(<em>WinTitle</em>, <em>WinText</em>, <em>ExcludeTitle</em>, <em>ExcludeText</em>) 必须是非空的.</p>
<p><a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 也会影响由 HWND 识别的隐藏窗口是否被检测到, 但仅当在与 WinWait 或 <a href="WinWaitClose.htm">WinWaitClose</a> 一起使用时.</p>

<h2 id="Related">相关</h2>
<p><a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="WinExist.htm">WinExist</a>, <a href="WinActive.htm">WinActive</a>, <a href="ProcessWait.htm">ProcessWait</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>

<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 打开记事本, 最多等待 3 秒, 直到它存在. 如果 WinWait 超时, 会显示一条错误信息, 否则记事本将被最小化.</p>
<pre>Run "notepad.exe"
if WinWait("Untitled - Notepad", , 3)
    WinMinimize  <em>; 使用由 WinWait 找到的窗口.</em>
else
    MsgBox "WinWait timed out."
</pre>
</div>

</body>
</html>