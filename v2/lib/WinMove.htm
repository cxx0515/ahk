<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>WinMove - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The WinMove function changes the position and/or size of the specified window." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinMove</h1>

<p>改变指定窗口的位置和/或大小.</p>

<pre class="Syntax"><span class="func">WinMove</span> <span class="optional">X, Y, Width, Height, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>

<h2 id="Parameters">参数</h2>
<dl>
  <dt>X, Y</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>如果其中一个为空或省略, 则不会更改该维度中的位置. 否则, 请指定目标窗口新位置的左上角的 X 和 Y 坐标(单位为像素). 屏幕左上角坐标为 0, 0.</p>
  </dd>

  <dt>Width, Height</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>如果其中一个省略, 则不会更改该维度中的尺寸. 否则, 请指定目标窗口的新宽度和高度(单位为像素).</p>
  </dd>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
    <p>如果这些都是空白或省略, 将使用<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>. 否则, 为 <em>WinTitle</em> 指定<a href="../misc/WinTitle.htm">窗口标题或其他条件</a>, 来标识目标窗口, 和/或为 <em>WinText</em> 指定目标窗口的单个文本元素的子字符串(由包含的 Window Spy 实用程序显示).</p>
    <p><em>ExcludeTitle</em> 和 <em>ExcludeText</em> 可用于根据标题或文本排除一个或多个窗口. 它们的规范类似于 <em>WinTitle</em> 和 <em>WinText</em>, 除了 <em>ExcludeTitle</em> 不识别除窗口标题之外的任何条件.</p>
    <p>窗口标题和文本是区分大小写的. 默认情况下, 不检测隐藏窗口, 而检测隐藏文本元素, 除非使用 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 和 <a href="DetectHiddenText.htm">DetectHiddenText</a> 进行更改. 默认情况下, 窗口标题必须以指定的 <em>WinTitle</em> 或 <em>ExcludeTitle</em> 开头才能匹配, 除非使用 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> 进行更改.</p>
  </dd>

</dl>

<h2 id="Error_Handling">错误处理</h2>
<p>如果找不到窗口, 则抛出 <a href="Error.htm#TargetError">TargetError</a>.</p>
<p>如果内部函数调用报告失败, 则抛出 <a href="Error.htm#OSError">OSError</a>. 但是, 即使窗口没有移动, 也可能报告成功, 例如, 如果窗口限制了自己的移动.</p>

<h2 id="Remarks">备注</h2>
<p>如果 <em>Width</em> 或 <em>Height</em> 太小(或为负数), 那么大多数带标题栏的窗口最小尺寸不会小于 112 x 27 像素(不过, 有些类型的窗口的最小的尺寸可能有差异). 如果 <em>Width</em> 或 <em>Height</em> 太大, 那么大多数窗口最大尺寸不会大于超过桌面尺寸大约 12 像素.</p>
<p>X 和 Y 坐标允许使用负数, 这样可以支持多显示器系统, 并将窗口完全移出屏幕.</p>
<p>尽管 WinMove 不能移动最小化状态的窗口, 不过当 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 设置开启时它可以移动隐藏窗口.</p>
<p>WinMove 移动窗口的速度受 <a href="SetWinDelay.htm">SetWinDelay</a> 影响.</p>
<p>在具有不同 DPI 设置的多个屏幕的系统上, 由于<a href="../misc/DPIScaling.htm">操作系统 DPI 缩放</a>, 返回的位置和大小可能与预期不同.</p>

<h2 id="Related">相关</h2>
<p><a href="ControlMove.htm">ControlMove</a>, <a href="WinGetPos.htm">WinGetPos</a>, <a href="WinHide.htm">WinHide</a>, <a href="WinMinimize.htm">WinMinimize</a>, <a href="WinMaximize.htm">WinMaximize</a>, <a href="Win.htm">窗口函数</a></p>

<h2 id="Examples">示例</h2>
<div class="ex" id="ExLastFound">
<p><a class="ex_number" href="#ExLastFound"></a> 打开计算器, 等待它的存在并将其移动到屏幕的左上角.</p>
<pre>Run "calc.exe"
WinWait "Calculator"
WinMove 0, 0 <em>; 使用由 WinWait 找到的窗口.</em></pre>
</div>

<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 创建一个固定大小的弹出窗口, 显示剪贴板的内容, 并将其移动到屏幕的左上角.</p>
<pre>MyGui := Gui("ToolWindow -Sysmenu Disabled", "The clipboard contains:")
MyGui.Add("Text",, A_Clipboard)
MyGui.Show("w400 h300")
WinMove 0, 0,,, MyGui
MsgBox "Press OK to dismiss the popup window"
MyGui.Destroy()</pre>
</div>

<div class="ex" id="ExCenter">
<p><a class="ex_number" href="#ExCenter"></a> 让指定窗口显示在屏幕中间.</p>
<pre>CenterWindow("ahk_class Notepad")

CenterWindow(WinTitle)
{
    WinGetPos ,, &amp;Width, &amp;Height, WinTitle
    WinMove (A_ScreenWidth/2)-(Width/2), (A_ScreenHeight/2)-(Height/2),,, WinTitle
}</pre>
</div>

</body>
</html>