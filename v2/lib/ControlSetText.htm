<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>ControlSetText - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The ControlSetText function changes the text of a control." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlSetText</h1>

<p>更改控件的文本.</p>

<pre class="Syntax"><span class="func">ControlSetText</span> NewText, Control <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>NewText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>如果为空或省略, 则控件的文本被设置为空. 否则, 指定设置到控件的新文本.</p>
  </dd>

  <dt>Control</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
    控件的 ClassNN, 文本或 HWND, 或具有 <code>Hwnd</code> 属性的对象. 有关详情, 请参阅 <a href="Control.htm#Parameter">Control 参数</a>.</p>
  </dd>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Concepts.htm#objects">对象</a></p>
    <p>如果这些都是空白或省略, 将使用<a href="../misc/WinTitle.htm#LastFoundWindow">上次找到的窗口</a>. 否则, 为 <em>WinTitle</em> 指定<a href="../misc/WinTitle.htm">窗口标题或其他条件</a>, 来标识目标窗口, 和/或为 <em>WinText</em> 指定目标窗口的单个文本元素的子字符串(由包含的 Window Spy 实用程序显示).</p>
    <p><em>ExcludeTitle</em> 和 <em>ExcludeText</em> 可用于根据标题或文本排除一个或多个窗口. 它们的规范类似于 <em>WinTitle</em> 和 <em>WinText</em>, 除了 <em>ExcludeTitle</em> 不识别除窗口标题之外的任何条件.</p>
    <p>窗口标题和文本是区分大小写的. 默认情况下, 不检测隐藏窗口, 而检测隐藏文本元素, 除非使用 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 和 <a href="DetectHiddenText.htm">DetectHiddenText</a> 进行更改. 默认情况下, 窗口标题必须以指定的 <em>WinTitle</em> 或 <em>ExcludeTitle</em> 开头才能匹配, 除非使用 <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> 进行更改.</p>
  </dd>

</dl>

<h2 id="Error_Handling">错误处理</h2>
<p>如果找不到窗口或控件, 则抛出 <a href="Error.htm#TargetError">TargetError</a>.</p>

<h2 id="Remarks">备注</h2>
<p>大多数控件类型使用回车和换行符(`r`n) 而不是单独的换行符(`n) 来表示每行的结尾. 要转换包含 `n 字符的文本块, 请参照此例:</p>
<pre>MyVar := <a href="StrReplace.htm">StrReplace</a>(MyVar, "`n", "`r`n")</pre>
<p>为了提高可靠性, 每次使用此函数后都会自动执行延迟. 该延迟可以通过 <a href="SetControlDelay.htm">SetControlDelay</a> 或者给 <a href="../Variables.htm#ControlDelay">A_ControlDelay</a> 赋值来更改. 有关详情, 请参阅 <a href="SetControlDelay.htm#Remarks">SetControlDelay 备注</a>.</p>

<h2 id="Related">相关</h2>
<p><a href="SetControlDelay.htm">SetControlDelay</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="Control.htm">控件函数</a></p>

<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 更改记事本编辑控件的文本. 这个例子在 Windows 11 或更高版本系统可能会失败, 因为它需要经典版本的记事本.</p>
<pre>ControlSetText("New Text Here", "Edit1", "Untitled -")</pre>
</div>
<div class="ex" id="ExMainWin">
<p><a class="ex_number" href="#ExMainWin"></a> 更改<a href="../Program.htm#main-window">主窗口</a>编辑控件的文本.</p>
<pre>ListVars
WinWaitActive "ahk_class AutoHotkey"
ControlSetText "New Text Here", "Edit1" <em>; 使用上面找到的窗口.</em></pre>
</div>

</body>
</html>