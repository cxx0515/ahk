<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>Switch | AutoHotkey v1</title>
<meta name="description" content="The Switch statement compares a value with multiple cases and executes the statements of the first match." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

 <h1>Switch <span class="ver">[v1.1.31+]</span></h1>

 <p>将一个值与多个实例进行比较, 并执行第一个匹配的<a href="../Concepts.htm#statement">语句</a>.</p>

 <pre class="Syntax"><span class="func">Switch</span> <span class="optional">SwitchValue</span>
{
<span class="func">Case</span> CaseValue1:
    <i>Statements1</i>
<span class="func">Case</span> CaseValue2a, CaseValue2b:
    <i>Statements2</i>
<span class="func">Default</span>:
    <i>Statements3</i>
}</pre>

<h2 id="Parameters">参数</h2>
<dl>
  <dt>SwitchValue</dt>
  <dd>
    <p>如果省略, 将执行第一个计算为 <a href="../Concepts.htm#boolean">true</a>(非零和非空) 的实例. 否则, 对 <em>SwitchValue</em> 进行一次计算并与每个实例值进行比较, 直到找到匹配为止, 然后执行该实例.</p>
    <p>如果没有匹配的实例并且存在 <em>Default</em>, 则执行它.</p>
  </dd>
  <dt>CaseValueN</dt>
  <dd>
    <p>要检查或比较的值, 取决于 <em>SwitchValue</em> 是否存在.</p>
  </dd>
</dl>

<h2 id="Remarks">备注</h2>
<p>如果 <em>SwitchValue</em> 和 case 值都是数字或数字字符串, 则进行数值比较. 每个用例值都被单独考虑, 不影响用于其他用例值的比较类型. <span class="ver">[v1.1.36+]</span>: 如果任意一个表达式是单引号字符串, 则比较是非数值. 例如, <code>switch v:="00"</code> 匹配 <code>case "00":</code> 或 <code>case 0:</code>, 但不匹配 <code>case "0":</code>.</p>
<p><a href="StringCaseSense.htm">StringCaseSense</a> 控制由 Switch 执行的字符串比较的大小写敏感性.</p>
<p>每个实例最多可以列出 20 个值. 每个值必须是一个<a href="../Language.htm#expressions">表达式</a>, 但可以是一个原义数字, 加引号的字符串或变量. <em>Case</em> 和 <em>Default</em> 必须以冒号(:) 终止.</p>
<p>每个实例的第一个语句可以在 <em>Case</em> 下面, 也可以在同一行, 挨着冒号. 每个实例都隐式地以下一个 <em>Case</em>/<em>Default</em> 或右大括号结束. 与在其他一些语言中找到的 switch 语句不同, 没有隐式的落下直通和不使用 <a href="Break.htm">Break</a>(除非用于跳出封闭循环).</p>
<p>由于所有实例都包含在同一个块中, 因此在一个实例中定义的标签可以是另一个案例的 <a href="Goto.htm">Goto</a> 的目标. 但是, 如果标签位于 <em>Case</em> 或 <em>Default</em> 的正上方, 则它将指向前一个实例的结尾, 而不是下一个实例的开头.</p>
<p><em>Default</em> 不需要列在最后.</p>

 <h2 id="Related">相关</h2>
<p><a href="IfExpression.htm">If (表达式)</a>, <a href="Else.htm">Else</a>, <a href="Block.htm">区块</a></p>

 <h2 id="examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 将一个数字与多个实例进行比较, 并显示第一个匹配的消息框.</p>
<pre>switch 2
{
case 1: MsgBox no match
case 2: MsgBox match
case 3: MsgBox no match
}</pre>
</div>

<div class="ex" id="ExBasicOmitted">
<p><a class="ex_number" href="#ExBasicOmitted"></a> <em>SwitchValue</em> 参数可以省略, 以执行第一个计算结果为 true 的情况.</p>
<pre>str := "the red fox jumps over the lazy brown dog"
switch
{
case InStr(str, "blue"): MsgBox false
case InStr(str, "red"): MsgBox true
case InStr(str, "green"): MsgBox false
}</pre>
</div>

<div class="ex" id="ExInput">
<p><a class="ex_number" href="#ExInput"></a> 这是一个有效的热键示例. 在 <a href="Input.htm">Input</a> 命令的文档中有一个使用 if-else-if 的功能相同的<a href="Input.htm#ExHotkey">示例</a>.</p>
<pre>~[::
Input, UserInput, V T5 L4 C, {enter}.{esc}{tab}, btw,otoh,fl,ahk,ca
switch ErrorLevel
{
case "Max":
    MsgBox, You entered "%UserInput%", which is the maximum length of text.
    return
case "Timeout":
    MsgBox, You entered "%UserInput%" at which time the input timed out.
    return
case "NewInput":
    return
default:
    if InStr(ErrorLevel, "EndKey:")
    {
        MsgBox, You entered "%UserInput%" and terminated the input with %ErrorLevel%.
        return
    }
}
switch UserInput
{
case "btw":   Send, {backspace 4}by the way
case "otoh":  Send, {backspace 5}on the other hand
case "fl":    Send, {backspace 3}Florida
case "ca":    Send, {backspace 3}California
case "ahk":   Run, https://www.autohotkey.com
}
return
</pre>
</div>

 </body>
</html>